---
title: Admin tutorial
---

This page is a guided walk-thru of common administration activities and features:

* View health of each VM
* View health of each Redis container
* View logs of each Redis container
* Scale up and out to create more capacity

The section "Destroy all VMs and recover" is a very important section. **It is highly recommended** that all administrators practise this tutorial at least once so they are familiar and confident with the disaster recovery proceedings.

## Assumptions

It is assumed that you are continuing this tutorial after doing [User tutorial](usage-tutorial.html) and that there is a single `music-redis` service instance running.

If not, then:

```
cf create-service dingo-redis solo music-redis
```


## View health of VMs

As an administrator of Pivotal OpsManager, you can SSH into its VM and access the running Dingo Redis using the `bosh` CLI.

```
$ ssh ubuntu@OPS-MANAGER-FQDN
Password: ***********
```

Once inside, target the BOSH director and login:

```
bosh --ca-cert /var/tempest/workspaces/default/root_ca_certificate target OPS-MANAGER-DIRECTOR-IP
bosh login
```

To find the Dingo Redis deployment name:

```
bosh deployments
```

The output will look similar to:

```
+----------------------------------+-------------------------+
| Name                             | Release(s)              |
+----------------------------------+-------------------------+
| cf-cfe388ed8196d69ce46c          | cf/235.5.50             |
|                                  | ...                     |
+----------------------------------+-------------------------+
| dingo-redis-a7b288b79dc61da71d3c | broker-registrar/2.0.0  |
|                                  | docker/0.30.0           |
+----------------------------------+-------------------------+
```

To poll for the health/vitals of Dingo Redis using the name above (using a small font and wide terminal window):

```
bosh vms dingo-redis-a7b288b79dc61da71d3c --vitals
```

The output's right hand side will show the utilization of RAM `Memory Usage` and persistent disk `Persistent Disk Usage`:

```
+--------------------------+---------+-------------+-----------------------+------+------+------+--------------+------------+------------+------------+------------+
| VM                       | State   | IPs         |         Load          | CPU  | CPU  | CPU  | Memory Usage | Swap Usage | System     | Ephemeral  | Persistent |
|                          |         |             | (avg01, avg05, avg15) | User | Sys  | Wait |              |            | Disk Usage | Disk Usage | Disk Usage |
+--------------------------+---------+-------------+-----------------------+------+------+------+--------------+------------+------------+------------+------------+
| cell_z1-partition-9ae... | running | 10.213.0.62 | 0.00, 0.03, 0.05      | 0.9% | 0.6% | 0.0% | 3% (463.0M)  | 0% (0B)    | 44%        | 0%         | 1%         |
| cell_z1-partition-9ae... | running | 10.213.0.63 | 0.06, 0.05, 0.05      | 1.0% | 0.5% | 0.0% | 3% (464.3M)  | 0% (0B)    | 44%        | 0%         | 1%         |
| cell_z2-partition-9ae... | running | 10.213.0.64 | 0.00, 0.02, 0.05      | 0.3% | 0.3% | 0.1% | 3% (448.5M)  | 0% (0B)    | 44%        | 0%         | 1%         |
| cell_z2-partition-9ae... | running | 10.213.0.65 | 0.00, 0.01, 0.05      | 0.2% | 0.2% | 0.0% | 3% (463.5M)  | 0% (0B)    | 44%        | 0%         | 1%         |
| etcd-partition-9ae6a1... | running | 10.213.0.61 | 0.05, 0.04, 0.05      | 0.0% | 0.0% | 0.3% | 5% (106.9M)  | 0% (0B)    | 44%        | 1%         | 3%         |
| router-partition-9ae6... | running | 10.213.0.66 | 0.03, 0.05, 0.05      | 0.5% | 0.6% | 0.0% | 6% (127.1M)  | 0% (0B)    | 44%        | 3%         | 0%         |
+--------------------------------------------+-----+----------------------------------------+-------------+-----------------------+------+------+------+--------------+------------+------------+------------+------------+
```

You are primarily focused on the health of the `cell` VMs. This is where Redis servers are running inside Docker containers.

Convenience command to look up the deployment name and put into `$name` variable:

```
name=$(bosh deployments | grep dingo-redis- | awk '{print $2}')
bosh vms $name
```

## Access Redis servers inside Docker containers

Use the `bosh` CLI to SSH into one of the `cell` VMs:

```
bosh ssh cell_z1-partition-9ae6a1dc1415bea56862/0
```

To see the list of Docker containers running:

```
docker ps
```

To see the health of all containers use `ctop`:

```
ctop
```
